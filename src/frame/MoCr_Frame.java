/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import tools.FrameTools;
import tools.CommTools;
import core.*;
import core.mwin_modules.CipherModule;
import core.mwin_modules.GraphicModule;
import core.mwin_modules.SwitchModule;
import crypt.Tools;
import javax.swing.ToolTipManager;
/**
 *
 * @author Jonas
 */
public class MoCr_Frame extends javax.swing.JFrame {
    /**
     * Creates new form MoCr_Frame
     */
    public String IOFont = "Courier New"; //Variable f√ºr Font
    public String CFont = "Verdana";
    public MoCr_Frame_Credits localCredits;        //lokale Impressumsinstanz    
    public MoCr_Frame_Support localSupport;        //lokale Hilfsinstanz
    public MoCr_Frame_Settings localSettings;
    public MoCr_Frame_exc localExc;
    static CommTools localTools = new CommTools();
    static FrameTools localFraTools = new FrameTools();
    public WindowLogic localLogic;
    public GraphicModule localGModule;
    public SwitchModule localSModule;
    public CipherModule localCModule;

    
    
    public MoCr_Frame() {
        initComponents();   //Initialisierung der Fensterkomponente
        localLogic = WindowLogic.getInstance();
        localGModule = new GraphicModule(this);
        localSModule = new SwitchModule(this);
        localCModule = new CipherModule(this);
        getContentPane().requestFocusInWindow();
        localCredits = new MoCr_Frame_Credits();    //Initialisierung der lokalen Impressumsinstanz
        localSupport = new MoCr_Frame_Support();
        localLogic.setIdentificationPair(0, 0);
        localLogic.setMode(true);
        localSettings = new MoCr_Frame_Settings(this);
        localExc = new MoCr_Frame_exc();
        MoCr_HillSub_Matrix.setShowGrid(true);
        MoCr_TranspositionSub_MatrixKeyField.setShowGrid(true);
        MoCr_ADFGX_Matrix.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MoCr_SpielsprachenMP_Grouper = new javax.swing.ButtonGroup();
        MoCr_CodierungenMp_Grouper = new javax.swing.ButtonGroup();
        MoCr_TranspositionMP_Grouper = new javax.swing.ButtonGroup();
        MoCr_SteganoMP_Grouper = new javax.swing.ButtonGroup();
        MoCr_Gen_DynamicPanel = new javax.swing.JPanel();
        MoCr_MainPro_cardPanel = new javax.swing.JPanel();
        MoCr_MainPro_static_IOpanel = new javax.swing.JPanel();
        MoCr_MPstaticIO_Heading = new javax.swing.JLabel();
        MoCr_MPstaticIO_ScrollerOut = new javax.swing.JScrollPane();
        MoCr_MPstaticIO_OutField = new javax.swing.JTextArea();
        MoCr_MPstaticIO_ScrollerIn = new javax.swing.JScrollPane();
        MoCr_MPstaticIO_InField = new javax.swing.JTextArea();
        MoCr_MainPro_changeable = new javax.swing.JPanel();
        MoCr_MPSub_Caesar = new javax.swing.JPanel();
        MoCr_CaesarSub_Heading = new javax.swing.JLabel();
        MoCr_CaesarSub_LabelSchluessel = new javax.swing.JLabel();
        MoCr_Caesar_EingabefeldSchluessel = new javax.swing.JTextField();
        MoCr_CaesarSub_DiscBack = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MoCr_MPSub_Multiplikativ = new javax.swing.JPanel();
        MoCr_MultiplikativSub_Heading = new javax.swing.JLabel();
        MoCr_MultiplikaitvSub_KeyPointer = new javax.swing.JLabel();
        MoCr_MultiplikativSub_KeyField = new javax.swing.JTextField();
        MoCr_MultiplikaitvSub_KeyGenButton = new javax.swing.JButton();
        MoCr_MultiplikativSub_Bild = new javax.swing.JLabel();
        MoCr_MPSub_Vigenere = new javax.swing.JPanel();
        MoCr_VigenereSub_Heading = new javax.swing.JLabel();
        MoCr_VigenereSub_Image = new javax.swing.JLabel();
        MoCr_VigenereSub_LabelSchluessel = new javax.swing.JLabel();
        MoCr_VigenereSub_EingabefeldSchluessel = new javax.swing.JTextField();
        MoCr_MPSub_OTP = new javax.swing.JPanel();
        MoCr_MPSub_OTP_Testlabel = new javax.swing.JLabel();
        MoCr_OTPSub_LabelSchluessel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MoCr_OTPSub_Area = new javax.swing.JTextArea();
        MoCr_OTPSub_Generator = new javax.swing.JButton();
        MoCr_MPSub_Transposition = new javax.swing.JPanel();
        MoCr_TranspositionSub_Heading = new javax.swing.JLabel();
        MoCr_TranspositionSub_SpaltelButton = new javax.swing.JRadioButton();
        MoCr_TranspositionSub_GartenzaunButton = new javax.swing.JRadioButton();
        MoCr_TranspositionSub_AnagrammButton = new javax.swing.JRadioButton();
        MoCr_TranspositionSub_DoppelwuerfelButton = new javax.swing.JRadioButton();
        MoCr_TranspositionSub_PermutaButton = new javax.swing.JRadioButton();
        MoCr_TranspositionSub_KeyPanel = new javax.swing.JPanel();
        MoCr_TranspositionSub_1Key = new javax.swing.JPanel();
        MoCr_TranspositionKey_1KeyLabel = new javax.swing.JLabel();
        MoCr_TranspositionKey_1KeyField = new javax.swing.JTextField();
        MoCr_TranspositionSub_2Key = new javax.swing.JPanel();
        MoCr_TranspositionSub_2KeyLabel = new javax.swing.JLabel();
        MoCr_TranspositionSub_2KeyField1 = new javax.swing.JTextField();
        MoCr_TranspositionSub_2KeyField2 = new javax.swing.JTextField();
        MoCr_TranspositionSub_MatrixKey = new javax.swing.JPanel();
        MoCr_TranspositionSub_MatrixKeyLabel = new javax.swing.JLabel();
        MoCr_TranspositionSub_MatrixKeyField = new javax.swing.JTable();
        MoCr_PermSub_MinVal = new javax.swing.JLabel();
        MoCr_PermSub_MaxVal = new javax.swing.JLabel();
        MoCr_PermSub_Slider = new javax.swing.JSlider();
        MoCr_PermSub_Label = new javax.swing.JLabel();
        MoCr_PermSub_ValueLabel = new javax.swing.JLabel();
        MoCr_TranspositionSub_NoKey = new javax.swing.JPanel();
        MoCr_MPSub_Codierungen = new javax.swing.JPanel();
        MoCr_CodierungenSub_Heading = new javax.swing.JLabel();
        MoCr_CodierungenSub_MorseButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_ASCIIButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_BinaerButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_AlphaButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_ADFGXButton = new javax.swing.JRadioButton();
        MoCr_ADFGX_Scroller = new javax.swing.JScrollPane();
        MoCr_ADFGX_Matrix = new javax.swing.JTable();
        MoCr_CodierungenSub_BinToHexButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_NATOButton = new javax.swing.JRadioButton();
        MoCr_CodierungenSub_ADFGXFiller = new javax.swing.JButton();
        MoCr_MPSub_Spielsprachen = new javax.swing.JPanel();
        MoCr_SpielsprachenSub_Heading = new javax.swing.JLabel();
        MoCr_SpielsprachenMP_BiButton = new javax.swing.JRadioButton();
        MoCr_SpielsprachenMP_BobButton = new javax.swing.JRadioButton();
        MoCr_SpielsprachenMP_LoeffelButton = new javax.swing.JRadioButton();
        MoCr_MPSub_Hill = new javax.swing.JPanel();
        MoCr_HillSub_Heading = new javax.swing.JLabel();
        MoCr_HillSub_Matrix = new javax.swing.JTable();
        MoCr_HillSub_Slider = new javax.swing.JSlider();
        MoCr_HillSub_MinLab = new javax.swing.JLabel();
        MoCr_HillSub_MaxLab = new javax.swing.JLabel();
        MoCr_HillSub_SizeLab = new javax.swing.JLabel();
        MoCr_HillSub_Size = new javax.swing.JLabel();
        MoCr_MPSub_Steganographie = new javax.swing.JPanel();
        MoCr_SteganoSub_Heading = new javax.swing.JLabel();
        MoCr_SteganoSub_BaconButton = new javax.swing.JRadioButton();
        MoCr_SteganoSub_PseudoButton = new javax.swing.JRadioButton();
        MoCr_SteganoSub_BaconKeyHeading = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MoCr_SteganoSub_BaconKey = new javax.swing.JTextArea();
        MoCr_MPSub_AffineChiffre = new javax.swing.JPanel();
        MoCr_AffiChiffSub_Heading = new javax.swing.JLabel();
        MoCr_AffChiffSub_KeyLabel = new javax.swing.JLabel();
        MoCr_AffChiffSub_Key1 = new javax.swing.JTextField();
        MoCr_AffChiffSub_Key2 = new javax.swing.JTextField();
        MoCr_AffChiffSub_mLabel = new javax.swing.JLabel();
        MoCr_AffChiffSub_tLabel = new javax.swing.JLabel();
        MoCr_AffChiffSub_Functionpointer = new javax.swing.JLabel();
        MoCr_AffChiffSub_FuncPre = new javax.swing.JLabel();
        MoCr_AffChiffSub_Function = new javax.swing.JLabel();
        MoCr_MPSub_Kryptoanalyse = new javax.swing.JPanel();
        MoCr_AffiChiffSub_Heading1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        MoCr_Did_cardPanel = new javax.swing.JPanel();
        MoCr_Did_Returnerbutton = new javax.swing.JButton();
        MoCr_Did_Scrollpanel = new javax.swing.JScrollPane();
        MoCr_Did_HTMLView = new javax.swing.JEditorPane();
        MoCr_Gen_ListPanel = new javax.swing.JPanel();
        MoCr_GenDyn_MainProList = new javax.swing.JPanel();
        MoCr_Gen_Sidelist = new javax.swing.JScrollPane();
        MoCr_Gen_Sidelister = new javax.swing.JList<>();
        MoCr_MPButtonpanel_LearnButton = new javax.swing.JButton();
        MoCr_MPButtonpanel_ExerciseButton = new javax.swing.JButton();
        MoCr_MPButtonpanel_IOChange = new javax.swing.JButton();
        MoCr_MPButtonpanel_Help = new javax.swing.JButton();
        MoCr_EncryptButton = new javax.swing.JLabel();
        MoCr_DecryptButton = new javax.swing.JLabel();
        MoCr_GenDyn_DidListPanel = new javax.swing.JPanel();
        MoCr_Gen_DidList = new javax.swing.JScrollPane();
        MoCr_Gen_DidLister = new javax.swing.JList<>();
        MoCr_Gen_Choicebar = new javax.swing.JMenuBar();
        MoCr_Gen_Choicemenu1 = new javax.swing.JMenu();
        MoCr_Gen_Choicemenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MonkeyCrypt");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(925, 570));
        setName("MoCr_Frame"); // NOI18N
        setSize(new java.awt.Dimension(600, 450));

        MoCr_Gen_DynamicPanel.setLayout(new java.awt.CardLayout());

        MoCr_MainPro_cardPanel.setBackground(new java.awt.Color(0, 102, 204));

        MoCr_MainPro_static_IOpanel.setOpaque(false);

        MoCr_MPstaticIO_Heading.setFont(new java.awt.Font("Constantia", 2, 18)); // NOI18N
        MoCr_MPstaticIO_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_MPstaticIO_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/angepasster Schriftzug des Programms.png"))); // NOI18N

        MoCr_MPstaticIO_OutField.setColumns(20);
        MoCr_MPstaticIO_OutField.setFont(new java.awt.Font(IOFont, 0, 13));
        MoCr_MPstaticIO_OutField.setLineWrap(true);
        MoCr_MPstaticIO_OutField.setRows(5);
        MoCr_MPstaticIO_OutField.setText("Ausgabe");
        MoCr_MPstaticIO_OutField.setToolTipText("Hier wird dein ver-/entschluesselter Text angezeigt");
        MoCr_MPstaticIO_OutField.setWrapStyleWord(true);
        MoCr_MPstaticIO_OutField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MoCr_MPstaticIO_OutFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                MoCr_MPstaticIO_OutFieldFocusLost(evt);
            }
        });
        MoCr_MPstaticIO_ScrollerOut.setViewportView(MoCr_MPstaticIO_OutField);

        MoCr_MPstaticIO_InField.setColumns(20);
        MoCr_MPstaticIO_InField.setFont(new java.awt.Font(IOFont, 0, 13));
        MoCr_MPstaticIO_InField.setLineWrap(true);
        MoCr_MPstaticIO_InField.setRows(5);
        MoCr_MPstaticIO_InField.setText("Eingabe");
        MoCr_MPstaticIO_InField.setToolTipText("Gib hier deinen Text ein");
        MoCr_MPstaticIO_InField.setWrapStyleWord(true);
        MoCr_MPstaticIO_InField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                MoCr_MPstaticIO_InFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                MoCr_MPstaticIO_InFieldFocusLost(evt);
            }
        });
        MoCr_MPstaticIO_ScrollerIn.setViewportView(MoCr_MPstaticIO_InField);

        javax.swing.GroupLayout MoCr_MainPro_static_IOpanelLayout = new javax.swing.GroupLayout(MoCr_MainPro_static_IOpanel);
        MoCr_MainPro_static_IOpanel.setLayout(MoCr_MainPro_static_IOpanelLayout);
        MoCr_MainPro_static_IOpanelLayout.setHorizontalGroup(
            MoCr_MainPro_static_IOpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_MainPro_static_IOpanelLayout.createSequentialGroup()
                .addGroup(MoCr_MainPro_static_IOpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MoCr_MPstaticIO_ScrollerIn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_MPstaticIO_Heading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_MPstaticIO_ScrollerOut))
                .addContainerGap())
        );
        MoCr_MainPro_static_IOpanelLayout.setVerticalGroup(
            MoCr_MainPro_static_IOpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MainPro_static_IOpanelLayout.createSequentialGroup()
                .addComponent(MoCr_MPstaticIO_ScrollerIn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_MPstaticIO_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(MoCr_MPstaticIO_ScrollerOut))
        );

        MoCr_MainPro_changeable.setOpaque(false);
        MoCr_MainPro_changeable.setPreferredSize(new java.awt.Dimension(360, 508));
        MoCr_MainPro_changeable.setLayout(new java.awt.CardLayout());

        MoCr_MPSub_Caesar.setOpaque(false);

        MoCr_CaesarSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_CaesarSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_CaesarSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Caesar.png"))); // NOI18N
        MoCr_CaesarSub_Heading.setToolTipText("");

        MoCr_CaesarSub_LabelSchluessel.setFont(new java.awt.Font(CFont, 0, 18));
        MoCr_CaesarSub_LabelSchluessel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        MoCr_CaesarSub_LabelSchluessel.setText("Schl√ºssel:");

        MoCr_Caesar_EingabefeldSchluessel.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_Caesar_EingabefeldSchluessel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MoCr_CaesarSub_DiscBack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_CaesarSub_DiscBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Drehscheibe Einzelsequenzen/DS_a.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Pfeil Rechts.png"))); // NOI18N
        jLabel1.setToolTipText(null);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Pfeil Links.png"))); // NOI18N
        jLabel2.setToolTipText(null);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MoCr_MPSub_CaesarLayout = new javax.swing.GroupLayout(MoCr_MPSub_Caesar);
        MoCr_MPSub_Caesar.setLayout(MoCr_MPSub_CaesarLayout);
        MoCr_MPSub_CaesarLayout.setHorizontalGroup(
            MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_CaesarSub_DiscBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_CaesarSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_CaesarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_CaesarSub_LabelSchluessel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoCr_MPSub_CaesarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(MoCr_MPSub_CaesarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MoCr_Caesar_EingabefeldSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        MoCr_MPSub_CaesarLayout.setVerticalGroup(
            MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_CaesarLayout.createSequentialGroup()
                .addComponent(MoCr_CaesarSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_CaesarSub_DiscBack, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MoCr_MPSub_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_CaesarSub_LabelSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_Caesar_EingabefeldSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Caesar, "card2");

        MoCr_MPSub_Multiplikativ.setOpaque(false);
        MoCr_MPSub_Multiplikativ.setPreferredSize(new java.awt.Dimension(350, 508));

        MoCr_MultiplikativSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_MultiplikativSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_MultiplikativSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Multiplikative Chiffre.png"))); // NOI18N

        MoCr_MultiplikaitvSub_KeyPointer.setFont(new java.awt.Font(CFont, 0, 20));
        MoCr_MultiplikaitvSub_KeyPointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_MultiplikaitvSub_KeyPointer.setText("Schl√ºssel");

        MoCr_MultiplikativSub_KeyField.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_MultiplikativSub_KeyField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MoCr_MultiplikaitvSub_KeyGenButton.setFont(new java.awt.Font(CFont, 0, 18));
        MoCr_MultiplikaitvSub_KeyGenButton.setText("Schl√ºssel erzeugen");
        MoCr_MultiplikaitvSub_KeyGenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_MultiplikaitvSub_KeyGenButtonActionPerformed(evt);
            }
        });

        MoCr_MultiplikativSub_Bild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Alice Schwarz-Weiss.png"))); // NOI18N

        javax.swing.GroupLayout MoCr_MPSub_MultiplikativLayout = new javax.swing.GroupLayout(MoCr_MPSub_Multiplikativ);
        MoCr_MPSub_Multiplikativ.setLayout(MoCr_MPSub_MultiplikativLayout);
        MoCr_MPSub_MultiplikativLayout.setHorizontalGroup(
            MoCr_MPSub_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_MultiplikativLayout.createSequentialGroup()
                .addComponent(MoCr_MultiplikativSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(MoCr_MPSub_MultiplikativLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_MPSub_MultiplikativLayout.createSequentialGroup()
                        .addComponent(MoCr_MultiplikaitvSub_KeyPointer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MoCr_MultiplikativSub_KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addComponent(MoCr_MultiplikativSub_Bild, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_MultiplikaitvSub_KeyGenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        MoCr_MPSub_MultiplikativLayout.setVerticalGroup(
            MoCr_MPSub_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_MultiplikativLayout.createSequentialGroup()
                .addComponent(MoCr_MultiplikativSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(MoCr_MPSub_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MoCr_MultiplikaitvSub_KeyPointer, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(MoCr_MultiplikativSub_KeyField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MultiplikaitvSub_KeyGenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MultiplikativSub_Bild, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Multiplikativ, "card7");

        MoCr_MPSub_Vigenere.setOpaque(false);

        MoCr_VigenereSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_VigenereSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_VigenereSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Vigenere.png"))); // NOI18N

        MoCr_VigenereSub_Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Vigenere-Tabelle.png"))); // NOI18N

        MoCr_VigenereSub_LabelSchluessel.setFont(new java.awt.Font(CFont, 0, 18));
        MoCr_VigenereSub_LabelSchluessel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        MoCr_VigenereSub_LabelSchluessel.setText("Schl√ºssel:");

        MoCr_VigenereSub_EingabefeldSchluessel.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_VigenereSub_EingabefeldSchluessel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout MoCr_MPSub_VigenereLayout = new javax.swing.GroupLayout(MoCr_MPSub_Vigenere);
        MoCr_MPSub_Vigenere.setLayout(MoCr_MPSub_VigenereLayout);
        MoCr_MPSub_VigenereLayout.setHorizontalGroup(
            MoCr_MPSub_VigenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_VigenereLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(MoCr_VigenereSub_LabelSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_VigenereSub_EingabefeldSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(MoCr_VigenereSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_VigenereLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_VigenereSub_Image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        MoCr_MPSub_VigenereLayout.setVerticalGroup(
            MoCr_MPSub_VigenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_VigenereLayout.createSequentialGroup()
                .addComponent(MoCr_VigenereSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_VigenereSub_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(MoCr_MPSub_VigenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_VigenereSub_EingabefeldSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_VigenereSub_LabelSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Vigenere, "card3");

        MoCr_MPSub_OTP.setOpaque(false);

        MoCr_MPSub_OTP_Testlabel.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_MPSub_OTP_Testlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_MPSub_OTP_Testlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug One-Time-Pad.png"))); // NOI18N

        MoCr_OTPSub_LabelSchluessel.setFont(new java.awt.Font(CFont, 0, 18));
        MoCr_OTPSub_LabelSchluessel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MoCr_OTPSub_LabelSchluessel.setText("Schl√ºssel");

        MoCr_OTPSub_Area.setColumns(20);
        MoCr_OTPSub_Area.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_OTPSub_Area.setLineWrap(true);
        MoCr_OTPSub_Area.setRows(5);
        jScrollPane1.setViewportView(MoCr_OTPSub_Area);

        MoCr_OTPSub_Generator.setFont(new java.awt.Font(CFont, 0, 14));
        MoCr_OTPSub_Generator.setText("Schl√ºssel erzeugen");
        MoCr_OTPSub_Generator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_OTPSub_GeneratorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_MPSub_OTPLayout = new javax.swing.GroupLayout(MoCr_MPSub_OTP);
        MoCr_MPSub_OTP.setLayout(MoCr_MPSub_OTPLayout);
        MoCr_MPSub_OTPLayout.setHorizontalGroup(
            MoCr_MPSub_OTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_MPSub_OTP_Testlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_OTPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_OTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(MoCr_MPSub_OTPLayout.createSequentialGroup()
                        .addComponent(MoCr_OTPSub_LabelSchluessel)
                        .addGap(18, 18, 18)
                        .addComponent(MoCr_OTPSub_Generator)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MoCr_MPSub_OTPLayout.setVerticalGroup(
            MoCr_MPSub_OTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_OTPLayout.createSequentialGroup()
                .addComponent(MoCr_MPSub_OTP_Testlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MoCr_MPSub_OTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_OTPSub_LabelSchluessel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_OTPSub_Generator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_OTP, "card5");

        MoCr_MPSub_Transposition.setOpaque(false);

        MoCr_TranspositionSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_TranspositionSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_TranspositionSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Transpositionen.png"))); // NOI18N

        MoCr_TranspositionMP_Grouper.add(MoCr_TranspositionSub_SpaltelButton);
        MoCr_TranspositionSub_SpaltelButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_SpaltelButton.setText("Spaltentransposition");
        MoCr_TranspositionSub_SpaltelButton.setOpaque(false);
        MoCr_TranspositionSub_SpaltelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_TranspositionSub_SpaltelButtonActionPerformed(evt);
            }
        });

        MoCr_TranspositionMP_Grouper.add(MoCr_TranspositionSub_GartenzaunButton);
        MoCr_TranspositionSub_GartenzaunButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_GartenzaunButton.setText("Gartenzaun-Transposition");
        MoCr_TranspositionSub_GartenzaunButton.setOpaque(false);
        MoCr_TranspositionSub_GartenzaunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_TranspositionSub_GartenzaunButtonActionPerformed(evt);
            }
        });

        MoCr_TranspositionMP_Grouper.add(MoCr_TranspositionSub_AnagrammButton);
        MoCr_TranspositionSub_AnagrammButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_AnagrammButton.setText("Anagramm");
        MoCr_TranspositionSub_AnagrammButton.setOpaque(false);
        MoCr_TranspositionSub_AnagrammButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_TranspositionSub_AnagrammButtonActionPerformed(evt);
            }
        });

        MoCr_TranspositionMP_Grouper.add(MoCr_TranspositionSub_DoppelwuerfelButton);
        MoCr_TranspositionSub_DoppelwuerfelButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_DoppelwuerfelButton.setText("Doppelw√ºrfel");
        MoCr_TranspositionSub_DoppelwuerfelButton.setOpaque(false);
        MoCr_TranspositionSub_DoppelwuerfelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_TranspositionSub_DoppelwuerfelButtonActionPerformed(evt);
            }
        });

        MoCr_TranspositionMP_Grouper.add(MoCr_TranspositionSub_PermutaButton);
        MoCr_TranspositionSub_PermutaButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_PermutaButton.setText("Transposition √ºber Permutationsmatrix");
        MoCr_TranspositionSub_PermutaButton.setOpaque(false);
        MoCr_TranspositionSub_PermutaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_TranspositionSub_PermutaButtonActionPerformed(evt);
            }
        });

        MoCr_TranspositionSub_KeyPanel.setOpaque(false);
        MoCr_TranspositionSub_KeyPanel.setLayout(new java.awt.CardLayout());

        MoCr_TranspositionSub_1Key.setOpaque(false);

        MoCr_TranspositionKey_1KeyLabel.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionKey_1KeyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_TranspositionKey_1KeyLabel.setText("Schl√ºssel");

        MoCr_TranspositionKey_1KeyField.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_TranspositionKey_1KeyField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout MoCr_TranspositionSub_1KeyLayout = new javax.swing.GroupLayout(MoCr_TranspositionSub_1Key);
        MoCr_TranspositionSub_1Key.setLayout(MoCr_TranspositionSub_1KeyLayout);
        MoCr_TranspositionSub_1KeyLayout.setHorizontalGroup(
            MoCr_TranspositionSub_1KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_TranspositionKey_1KeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
            .addGroup(MoCr_TranspositionSub_1KeyLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(MoCr_TranspositionKey_1KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_TranspositionSub_1KeyLayout.setVerticalGroup(
            MoCr_TranspositionSub_1KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_TranspositionSub_1KeyLayout.createSequentialGroup()
                .addComponent(MoCr_TranspositionKey_1KeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionKey_1KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 191, Short.MAX_VALUE))
        );

        MoCr_TranspositionSub_KeyPanel.add(MoCr_TranspositionSub_1Key, "card2");

        MoCr_TranspositionSub_2Key.setOpaque(false);

        MoCr_TranspositionSub_2KeyLabel.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_2KeyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_TranspositionSub_2KeyLabel.setText("Schl√ºssel");

        MoCr_TranspositionSub_2KeyField1.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_TranspositionSub_2KeyField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MoCr_TranspositionSub_2KeyField2.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_TranspositionSub_2KeyField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout MoCr_TranspositionSub_2KeyLayout = new javax.swing.GroupLayout(MoCr_TranspositionSub_2Key);
        MoCr_TranspositionSub_2Key.setLayout(MoCr_TranspositionSub_2KeyLayout);
        MoCr_TranspositionSub_2KeyLayout.setHorizontalGroup(
            MoCr_TranspositionSub_2KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_TranspositionSub_2KeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
            .addGroup(MoCr_TranspositionSub_2KeyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_TranspositionSub_2KeyField1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MoCr_TranspositionSub_2KeyField2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        MoCr_TranspositionSub_2KeyLayout.setVerticalGroup(
            MoCr_TranspositionSub_2KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_TranspositionSub_2KeyLayout.createSequentialGroup()
                .addComponent(MoCr_TranspositionSub_2KeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MoCr_TranspositionSub_2KeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_TranspositionSub_2KeyField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_TranspositionSub_2KeyField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 184, Short.MAX_VALUE))
        );

        MoCr_TranspositionSub_KeyPanel.add(MoCr_TranspositionSub_2Key, "card3");

        MoCr_TranspositionSub_MatrixKey.setOpaque(false);

        MoCr_TranspositionSub_MatrixKeyLabel.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_TranspositionSub_MatrixKeyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_TranspositionSub_MatrixKeyLabel.setText("Schl√ºsselmatrix");

        MoCr_TranspositionSub_MatrixKeyField.setFont(new java.awt.Font(IOFont, 0, 11));
        MoCr_TranspositionSub_MatrixKeyField.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        MoCr_TranspositionSub_MatrixKeyField.setCellSelectionEnabled(true);
        MoCr_TranspositionSub_MatrixKeyField.setGridColor(new java.awt.Color(51, 51, 51));
        MoCr_TranspositionSub_MatrixKeyField.setOpaque(false);
        MoCr_TranspositionSub_MatrixKeyField.setSelectionBackground(new java.awt.Color(255, 153, 0));
        MoCr_TranspositionSub_MatrixKeyField.getTableHeader().setReorderingAllowed(false);
        MoCr_TranspositionSub_MatrixKeyField.setUpdateSelectionOnSort(false);

        MoCr_PermSub_MinVal.setFont(new java.awt.Font(CFont, 0, 11));
        MoCr_PermSub_MinVal.setText("2");

        MoCr_PermSub_MaxVal.setFont(new java.awt.Font(CFont, 0, 11));
        MoCr_PermSub_MaxVal.setText("5");

        MoCr_PermSub_Slider.setMaximum(5);
        MoCr_PermSub_Slider.setMinimum(2);
        MoCr_PermSub_Slider.setToolTipText("");
        MoCr_PermSub_Slider.setValue(4);
        MoCr_PermSub_Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MoCr_PermSub_SliderStateChanged(evt);
            }
        });

        MoCr_PermSub_Label.setFont(new java.awt.Font(CFont, 0, 13));
        MoCr_PermSub_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_PermSub_Label.setText("Momentane Matrixgr√∂√üe");

        MoCr_PermSub_ValueLabel.setFont(new java.awt.Font(CFont, 0, 14));
        MoCr_PermSub_ValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_PermSub_ValueLabel.setText("4");

        javax.swing.GroupLayout MoCr_TranspositionSub_MatrixKeyLayout = new javax.swing.GroupLayout(MoCr_TranspositionSub_MatrixKey);
        MoCr_TranspositionSub_MatrixKey.setLayout(MoCr_TranspositionSub_MatrixKeyLayout);
        MoCr_TranspositionSub_MatrixKeyLayout.setHorizontalGroup(
            MoCr_TranspositionSub_MatrixKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_TranspositionSub_MatrixKeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
            .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_PermSub_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_PermSub_ValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
            .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MoCr_PermSub_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_TranspositionSub_MatrixKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createSequentialGroup()
                        .addComponent(MoCr_PermSub_MinVal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MoCr_PermSub_MaxVal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_TranspositionSub_MatrixKeyLayout.setVerticalGroup(
            MoCr_TranspositionSub_MatrixKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createSequentialGroup()
                .addComponent(MoCr_TranspositionSub_MatrixKeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_TranspositionSub_MatrixKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_PermSub_MinVal)
                    .addComponent(MoCr_PermSub_MaxVal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_PermSub_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(MoCr_TranspositionSub_MatrixKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_PermSub_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_PermSub_ValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        if (MoCr_TranspositionSub_MatrixKeyField.getColumnModel().getColumnCount() > 0) {
            MoCr_TranspositionSub_MatrixKeyField.getColumnModel().getColumn(0).setResizable(false);
            MoCr_TranspositionSub_MatrixKeyField.getColumnModel().getColumn(1).setResizable(false);
            MoCr_TranspositionSub_MatrixKeyField.getColumnModel().getColumn(2).setResizable(false);
        }

        MoCr_TranspositionSub_KeyPanel.add(MoCr_TranspositionSub_MatrixKey, "card4");

        MoCr_TranspositionSub_NoKey.setOpaque(false);

        javax.swing.GroupLayout MoCr_TranspositionSub_NoKeyLayout = new javax.swing.GroupLayout(MoCr_TranspositionSub_NoKey);
        MoCr_TranspositionSub_NoKey.setLayout(MoCr_TranspositionSub_NoKeyLayout);
        MoCr_TranspositionSub_NoKeyLayout.setHorizontalGroup(
            MoCr_TranspositionSub_NoKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );
        MoCr_TranspositionSub_NoKeyLayout.setVerticalGroup(
            MoCr_TranspositionSub_NoKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        MoCr_TranspositionSub_KeyPanel.add(MoCr_TranspositionSub_NoKey, "card5");

        javax.swing.GroupLayout MoCr_MPSub_TranspositionLayout = new javax.swing.GroupLayout(MoCr_MPSub_Transposition);
        MoCr_MPSub_Transposition.setLayout(MoCr_MPSub_TranspositionLayout);
        MoCr_MPSub_TranspositionLayout.setHorizontalGroup(
            MoCr_MPSub_TranspositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_TranspositionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_TranspositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_TranspositionSub_GartenzaunButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_TranspositionSub_AnagrammButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MoCr_MPSub_TranspositionLayout.createSequentialGroup()
                        .addComponent(MoCr_TranspositionSub_KeyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(MoCr_TranspositionSub_DoppelwuerfelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_TranspositionSub_PermutaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_TranspositionSub_SpaltelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(MoCr_TranspositionSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MoCr_MPSub_TranspositionLayout.setVerticalGroup(
            MoCr_MPSub_TranspositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_TranspositionLayout.createSequentialGroup()
                .addComponent(MoCr_TranspositionSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionSub_SpaltelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionSub_GartenzaunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionSub_AnagrammButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionSub_DoppelwuerfelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_TranspositionSub_PermutaButton)
                .addGap(18, 18, 18)
                .addComponent(MoCr_TranspositionSub_KeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Transposition, "card9");

        MoCr_MPSub_Codierungen.setOpaque(false);

        MoCr_CodierungenSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_CodierungenSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_CodierungenSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Codierungen.png"))); // NOI18N

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_MorseButton);
        MoCr_CodierungenSub_MorseButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_MorseButton.setText("Morse");
        MoCr_CodierungenSub_MorseButton.setOpaque(false);
        MoCr_CodierungenSub_MorseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_MorseButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_ASCIIButton);
        MoCr_CodierungenSub_ASCIIButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_ASCIIButton.setText("Hexadecimalcode (ASCII)");
        MoCr_CodierungenSub_ASCIIButton.setOpaque(false);
        MoCr_CodierungenSub_ASCIIButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_ASCIIButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_BinaerButton);
        MoCr_CodierungenSub_BinaerButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_BinaerButton.setText("Bin√§rcode");
        MoCr_CodierungenSub_BinaerButton.setOpaque(false);
        MoCr_CodierungenSub_BinaerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_BinaerButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_AlphaButton);
        MoCr_CodierungenSub_AlphaButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_AlphaButton.setText("Alphabetindex-Code");
        MoCr_CodierungenSub_AlphaButton.setOpaque(false);
        MoCr_CodierungenSub_AlphaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_AlphaButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_ADFGXButton);
        MoCr_CodierungenSub_ADFGXButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_ADFGXButton.setText("ADFGX-Code");
        MoCr_CodierungenSub_ADFGXButton.setOpaque(false);
        MoCr_CodierungenSub_ADFGXButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_ADFGXButtonActionPerformed(evt);
            }
        });

        MoCr_ADFGX_Matrix.setFont(new java.awt.Font(IOFont, 0, 11));
        MoCr_ADFGX_Matrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A", null, null, null, null, null},
                {"D", null, null, null, null, null},
                {"F", null, null, null, null, null},
                {"G", null, null, null, null, null},
                {"X", null, null, null, null, null}
            },
            new String [] {
                "", "A", "D", "F", "G", "X"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MoCr_ADFGX_Matrix.setAutoscrolls(false);
        MoCr_ADFGX_Matrix.setGridColor(new java.awt.Color(0, 0, 0));
        MoCr_ADFGX_Matrix.setOpaque(false);
        MoCr_ADFGX_Matrix.setSelectionBackground(new java.awt.Color(255, 153, 0));
        MoCr_ADFGX_Matrix.getTableHeader().setReorderingAllowed(false);
        MoCr_ADFGX_Matrix.setUpdateSelectionOnSort(false);
        MoCr_ADFGX_Scroller.setViewportView(MoCr_ADFGX_Matrix);
        if (MoCr_ADFGX_Matrix.getColumnModel().getColumnCount() > 0) {
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(0).setResizable(false);
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(1).setResizable(false);
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(2).setResizable(false);
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(3).setResizable(false);
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(4).setResizable(false);
            MoCr_ADFGX_Matrix.getColumnModel().getColumn(5).setResizable(false);
        }

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_BinToHexButton);
        MoCr_CodierungenSub_BinToHexButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_BinToHexButton.setText("Hexadecimalcode -> Bin√§rcode");
        MoCr_CodierungenSub_BinToHexButton.setOpaque(false);
        MoCr_CodierungenSub_BinToHexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_BinToHexButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenMp_Grouper.add(MoCr_CodierungenSub_NATOButton);
        MoCr_CodierungenSub_NATOButton.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_NATOButton.setText("Buchstabieralphabet (NATO)");
        MoCr_CodierungenSub_NATOButton.setOpaque(false);
        MoCr_CodierungenSub_NATOButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_NATOButtonActionPerformed(evt);
            }
        });

        MoCr_CodierungenSub_ADFGXFiller.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_CodierungenSub_ADFGXFiller.setText("Ausf√ºllen");
        MoCr_CodierungenSub_ADFGXFiller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_CodierungenSub_ADFGXFillerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_MPSub_CodierungenLayout = new javax.swing.GroupLayout(MoCr_MPSub_Codierungen);
        MoCr_MPSub_Codierungen.setLayout(MoCr_MPSub_CodierungenLayout);
        MoCr_MPSub_CodierungenLayout.setHorizontalGroup(
            MoCr_MPSub_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_CodierungenSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_CodierungenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_CodierungenSub_BinaerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_CodierungenSub_MorseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_ADFGX_Scroller, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(MoCr_CodierungenSub_ASCIIButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_CodierungenSub_AlphaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_CodierungenSub_ADFGXButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_CodierungenSub_NATOButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MoCr_MPSub_CodierungenLayout.createSequentialGroup()
                        .addGroup(MoCr_MPSub_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MoCr_CodierungenSub_ADFGXFiller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MoCr_CodierungenSub_BinToHexButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        MoCr_MPSub_CodierungenLayout.setVerticalGroup(
            MoCr_MPSub_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_CodierungenLayout.createSequentialGroup()
                .addComponent(MoCr_CodierungenSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_CodierungenSub_MorseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_ASCIIButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_BinaerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_BinToHexButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_AlphaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_NATOButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_CodierungenSub_ADFGXButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_ADFGX_Scroller, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_CodierungenSub_ADFGXFiller, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Codierungen, "card12");

        MoCr_MPSub_Spielsprachen.setOpaque(false);

        MoCr_SpielsprachenSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_SpielsprachenSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_SpielsprachenSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Spielsprachen.png"))); // NOI18N

        MoCr_SpielsprachenMP_Grouper.add(MoCr_SpielsprachenMP_BiButton);
        MoCr_SpielsprachenMP_BiButton.setFont(new java.awt.Font(CFont, 1, 20));
        MoCr_SpielsprachenMP_BiButton.setText("Bi-Sprache");
        MoCr_SpielsprachenMP_BiButton.setOpaque(false);
        MoCr_SpielsprachenMP_BiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_SpielsprachenMP_BiButtonActionPerformed(evt);
            }
        });

        MoCr_SpielsprachenMP_Grouper.add(MoCr_SpielsprachenMP_BobButton);
        MoCr_SpielsprachenMP_BobButton.setFont(new java.awt.Font(CFont, 1, 20));
        MoCr_SpielsprachenMP_BobButton.setText("Bob-Sprache");
        MoCr_SpielsprachenMP_BobButton.setOpaque(false);
        MoCr_SpielsprachenMP_BobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_SpielsprachenMP_BobButtonActionPerformed(evt);
            }
        });

        MoCr_SpielsprachenMP_Grouper.add(MoCr_SpielsprachenMP_LoeffelButton);
        MoCr_SpielsprachenMP_LoeffelButton.setFont(new java.awt.Font(CFont, 1, 20));
        MoCr_SpielsprachenMP_LoeffelButton.setText("L√∂ffelsprache");
        MoCr_SpielsprachenMP_LoeffelButton.setOpaque(false);
        MoCr_SpielsprachenMP_LoeffelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_SpielsprachenMP_LoeffelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_MPSub_SpielsprachenLayout = new javax.swing.GroupLayout(MoCr_MPSub_Spielsprachen);
        MoCr_MPSub_Spielsprachen.setLayout(MoCr_MPSub_SpielsprachenLayout);
        MoCr_MPSub_SpielsprachenLayout.setHorizontalGroup(
            MoCr_MPSub_SpielsprachenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_SpielsprachenSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_SpielsprachenLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(MoCr_MPSub_SpielsprachenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoCr_MPSub_SpielsprachenLayout.createSequentialGroup()
                        .addComponent(MoCr_SpielsprachenMP_BiButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(MoCr_SpielsprachenMP_BobButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_SpielsprachenMP_LoeffelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        MoCr_MPSub_SpielsprachenLayout.setVerticalGroup(
            MoCr_MPSub_SpielsprachenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_SpielsprachenLayout.createSequentialGroup()
                .addComponent(MoCr_SpielsprachenSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SpielsprachenMP_BiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SpielsprachenMP_BobButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SpielsprachenMP_LoeffelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 292, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Spielsprachen, "card4");

        MoCr_MPSub_Hill.setOpaque(false);

        MoCr_HillSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_HillSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_HillSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Hill Chiffre.png"))); // NOI18N

        MoCr_HillSub_Matrix.setAutoCreateRowSorter(true);
        MoCr_HillSub_Matrix.setFont(new java.awt.Font(IOFont, 0, 11));
        MoCr_HillSub_Matrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        MoCr_HillSub_Matrix.setCellSelectionEnabled(true);
        MoCr_HillSub_Matrix.setGridColor(new java.awt.Color(0, 0, 0));
        MoCr_HillSub_Matrix.setOpaque(false);
        MoCr_HillSub_Matrix.setSelectionBackground(new java.awt.Color(255, 153, 0));
        MoCr_HillSub_Matrix.getTableHeader().setReorderingAllowed(false);
        MoCr_HillSub_Matrix.setUpdateSelectionOnSort(false);

        MoCr_HillSub_Slider.setMaximum(5);
        MoCr_HillSub_Slider.setMinimum(2);
        MoCr_HillSub_Slider.setPaintTicks(true);
        MoCr_HillSub_Slider.setSnapToTicks(true);
        MoCr_HillSub_Slider.setToolTipText("");
        MoCr_HillSub_Slider.setValue(4);
        MoCr_HillSub_Slider.setOpaque(false);
        MoCr_HillSub_Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MoCr_HillSub_SliderStateChanged(evt);
            }
        });

        MoCr_HillSub_MinLab.setFont(new java.awt.Font(CFont, 0, 11));
        MoCr_HillSub_MinLab.setText("2");

        MoCr_HillSub_MaxLab.setFont(new java.awt.Font(CFont, 0, 11));
        MoCr_HillSub_MaxLab.setText("5");

        MoCr_HillSub_SizeLab.setFont(new java.awt.Font(CFont, 0, 14));
        MoCr_HillSub_SizeLab.setText("Momentane Matrixgr√∂√üe");

        MoCr_HillSub_Size.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_HillSub_Size.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_HillSub_Size.setText("4");

        javax.swing.GroupLayout MoCr_MPSub_HillLayout = new javax.swing.GroupLayout(MoCr_MPSub_Hill);
        MoCr_MPSub_Hill.setLayout(MoCr_MPSub_HillLayout);
        MoCr_MPSub_HillLayout.setHorizontalGroup(
            MoCr_MPSub_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_HillSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_MPSub_HillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_HillSub_SizeLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_HillSub_Size)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MoCr_MPSub_HillLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(MoCr_MPSub_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MoCr_MPSub_HillLayout.createSequentialGroup()
                        .addComponent(MoCr_HillSub_MinLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MoCr_HillSub_MaxLab))
                    .addComponent(MoCr_HillSub_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(MoCr_HillSub_Matrix, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MoCr_MPSub_HillLayout.setVerticalGroup(
            MoCr_MPSub_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_HillLayout.createSequentialGroup()
                .addComponent(MoCr_HillSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(MoCr_HillSub_Matrix, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MoCr_MPSub_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_HillSub_MinLab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_HillSub_MaxLab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_HillSub_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MoCr_MPSub_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_HillSub_SizeLab, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_HillSub_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Hill, "card10");

        MoCr_MPSub_Steganographie.setOpaque(false);

        MoCr_SteganoSub_Heading.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        MoCr_SteganoSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_SteganoSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Steganographie.png"))); // NOI18N

        MoCr_SteganoMP_Grouper.add(MoCr_SteganoSub_BaconButton);
        MoCr_SteganoSub_BaconButton.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_SteganoSub_BaconButton.setText("Bacon-Chiffre");
        MoCr_SteganoSub_BaconButton.setOpaque(false);
        MoCr_SteganoSub_BaconButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_SteganoSub_BaconButtonActionPerformed(evt);
            }
        });

        MoCr_SteganoMP_Grouper.add(MoCr_SteganoSub_PseudoButton);
        MoCr_SteganoSub_PseudoButton.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_SteganoSub_PseudoButton.setText("Pseudo-Text");
        MoCr_SteganoSub_PseudoButton.setOpaque(false);
        MoCr_SteganoSub_PseudoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_SteganoSub_PseudoButtonActionPerformed(evt);
            }
        });

        MoCr_SteganoSub_BaconKeyHeading.setFont(new java.awt.Font(CFont, 1, 16));
        MoCr_SteganoSub_BaconKeyHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_SteganoSub_BaconKeyHeading.setText("Tarntext f√ºr die Bacon-Chiffre");

        MoCr_SteganoSub_BaconKey.setColumns(20);
        MoCr_SteganoSub_BaconKey.setFont(new java.awt.Font(IOFont, 0, 13));
        MoCr_SteganoSub_BaconKey.setLineWrap(true);
        MoCr_SteganoSub_BaconKey.setRows(5);
        MoCr_SteganoSub_BaconKey.setWrapStyleWord(true);
        jScrollPane4.setViewportView(MoCr_SteganoSub_BaconKey);

        javax.swing.GroupLayout MoCr_MPSub_SteganographieLayout = new javax.swing.GroupLayout(MoCr_MPSub_Steganographie);
        MoCr_MPSub_Steganographie.setLayout(MoCr_MPSub_SteganographieLayout);
        MoCr_MPSub_SteganographieLayout.setHorizontalGroup(
            MoCr_MPSub_SteganographieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_SteganographieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_MPSub_SteganographieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(MoCr_SteganoSub_BaconButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_SteganoSub_PseudoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_SteganoSub_BaconKeyHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(MoCr_SteganoSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MoCr_MPSub_SteganographieLayout.setVerticalGroup(
            MoCr_MPSub_SteganographieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_SteganographieLayout.createSequentialGroup()
                .addComponent(MoCr_SteganoSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SteganoSub_BaconButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SteganoSub_PseudoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_SteganoSub_BaconKeyHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addContainerGap())
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Steganographie, "card11");

        MoCr_MPSub_AffineChiffre.setOpaque(false);
        MoCr_MPSub_AffineChiffre.setPreferredSize(new java.awt.Dimension(350, 480));

        MoCr_AffiChiffSub_Heading.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_AffiChiffSub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffiChiffSub_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Affine Chiffre.png"))); // NOI18N

        MoCr_AffChiffSub_KeyLabel.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_AffChiffSub_KeyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffChiffSub_KeyLabel.setText("Schl√ºsselbuchstaben");

        MoCr_AffChiffSub_Key1.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_AffChiffSub_Key1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MoCr_AffChiffSub_Key2.setFont(new java.awt.Font(IOFont, 0, 18));
        MoCr_AffChiffSub_Key2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        MoCr_AffChiffSub_mLabel.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_AffChiffSub_mLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffChiffSub_mLabel.setText("a =");

        MoCr_AffChiffSub_tLabel.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_AffChiffSub_tLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffChiffSub_tLabel.setText("b =");

        MoCr_AffChiffSub_Functionpointer.setFont(new java.awt.Font(CFont, 1, 14));
        MoCr_AffChiffSub_Functionpointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffChiffSub_Functionpointer.setText("Funktion");

        MoCr_AffChiffSub_FuncPre.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_AffChiffSub_FuncPre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffChiffSub_FuncPre.setText("f(x) =");

        MoCr_AffChiffSub_Function.setFont(new java.awt.Font(CFont, 1, 18));
        MoCr_AffChiffSub_Function.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout MoCr_MPSub_AffineChiffreLayout = new javax.swing.GroupLayout(MoCr_MPSub_AffineChiffre);
        MoCr_MPSub_AffineChiffre.setLayout(MoCr_MPSub_AffineChiffreLayout);
        MoCr_MPSub_AffineChiffreLayout.setHorizontalGroup(
            MoCr_MPSub_AffineChiffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_AffChiffSub_KeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_AffineChiffreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_AffChiffSub_mLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_Key1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_tLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_Key2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(MoCr_AffiChiffSub_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_MPSub_AffineChiffreLayout.createSequentialGroup()
                .addComponent(MoCr_AffChiffSub_Functionpointer, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_FuncPre, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_Function, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_MPSub_AffineChiffreLayout.setVerticalGroup(
            MoCr_MPSub_AffineChiffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_AffineChiffreLayout.createSequentialGroup()
                .addComponent(MoCr_AffiChiffSub_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_AffChiffSub_KeyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MoCr_MPSub_AffineChiffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_AffChiffSub_Key2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_AffChiffSub_Key1)
                    .addComponent(MoCr_AffChiffSub_mLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_AffChiffSub_tLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MoCr_MPSub_AffineChiffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MoCr_MPSub_AffineChiffreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MoCr_AffChiffSub_Functionpointer, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addComponent(MoCr_AffChiffSub_FuncPre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(MoCr_AffChiffSub_Function, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(273, 273, 273))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_AffineChiffre, "card12");

        MoCr_MPSub_Kryptoanalyse.setOpaque(false);
        MoCr_MPSub_Kryptoanalyse.setPreferredSize(new java.awt.Dimension(350, 480));

        MoCr_AffiChiffSub_Heading1.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        MoCr_AffiChiffSub_Heading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoCr_AffiChiffSub_Heading1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/headings/Schriftzug Kryptoanalyse.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font(CFont, 0, 12));
        jButton1.setText("Berechne die Buchstabenverteilung!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_MPSub_KryptoanalyseLayout = new javax.swing.GroupLayout(MoCr_MPSub_Kryptoanalyse);
        MoCr_MPSub_Kryptoanalyse.setLayout(MoCr_MPSub_KryptoanalyseLayout);
        MoCr_MPSub_KryptoanalyseLayout.setHorizontalGroup(
            MoCr_MPSub_KryptoanalyseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_KryptoanalyseLayout.createSequentialGroup()
                .addComponent(MoCr_AffiChiffSub_Heading1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(MoCr_MPSub_KryptoanalyseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        MoCr_MPSub_KryptoanalyseLayout.setVerticalGroup(
            MoCr_MPSub_KryptoanalyseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MPSub_KryptoanalyseLayout.createSequentialGroup()
                .addComponent(MoCr_AffiChiffSub_Heading1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(421, Short.MAX_VALUE))
        );

        MoCr_MainPro_changeable.add(MoCr_MPSub_Kryptoanalyse, "card12");

        javax.swing.GroupLayout MoCr_MainPro_cardPanelLayout = new javax.swing.GroupLayout(MoCr_MainPro_cardPanel);
        MoCr_MainPro_cardPanel.setLayout(MoCr_MainPro_cardPanelLayout);
        MoCr_MainPro_cardPanelLayout.setHorizontalGroup(
            MoCr_MainPro_cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_MainPro_cardPanelLayout.createSequentialGroup()
                .addComponent(MoCr_MainPro_static_IOpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MainPro_changeable, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        MoCr_MainPro_cardPanelLayout.setVerticalGroup(
            MoCr_MainPro_cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_MainPro_static_IOpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_MainPro_changeable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MoCr_Gen_DynamicPanel.add(MoCr_MainPro_cardPanel, "card3");

        MoCr_Did_Returnerbutton.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_Did_Returnerbutton.setText("Zur√ºck zum Hauptprogramm");
        MoCr_Did_Returnerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_Did_ReturnerbuttonActionPerformed(evt);
            }
        });

        MoCr_Did_HTMLView.setEditable(false);
        MoCr_Did_HTMLView.setContentType("text/html"); // NOI18N
        MoCr_Did_Scrollpanel.setViewportView(MoCr_Did_HTMLView);

        javax.swing.GroupLayout MoCr_Did_cardPanelLayout = new javax.swing.GroupLayout(MoCr_Did_cardPanel);
        MoCr_Did_cardPanel.setLayout(MoCr_Did_cardPanelLayout);
        MoCr_Did_cardPanelLayout.setHorizontalGroup(
            MoCr_Did_cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_Did_cardPanelLayout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(MoCr_Did_Returnerbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
            .addComponent(MoCr_Did_Scrollpanel)
        );
        MoCr_Did_cardPanelLayout.setVerticalGroup(
            MoCr_Did_cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_Did_cardPanelLayout.createSequentialGroup()
                .addComponent(MoCr_Did_Scrollpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_Did_Returnerbutton))
        );

        MoCr_Gen_DynamicPanel.add(MoCr_Did_cardPanel, "card2");

        MoCr_Gen_ListPanel.setLayout(new java.awt.CardLayout());

        MoCr_Gen_Sidelister.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_Gen_Sidelister.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Caesar Chiffre", "Multiplikative Chiffre", "Vigenere Chiffre", "One-Time-Pad", "Transpositionen", "Codierungen", "Spielsprachen", "Hill Chiffre", "Steganographie", "Affine Chiffre", "Kryptoanalyse" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        MoCr_Gen_Sidelister.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        MoCr_Gen_Sidelister.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        MoCr_Gen_Sidelister.setName(""); // NOI18N
        MoCr_Gen_Sidelister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MoCr_Gen_SidelisterMousePressed(evt);
            }
        });
        MoCr_Gen_Sidelist.setViewportView(MoCr_Gen_Sidelister);

        MoCr_MPButtonpanel_LearnButton.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_MPButtonpanel_LearnButton.setText("Lernen");
        MoCr_MPButtonpanel_LearnButton.setToolTipText("Lerne mehr √ºber diese Verschl√ºsselung");
        MoCr_MPButtonpanel_LearnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_MPButtonpanel_LearnButtonActionPerformed(evt);
            }
        });

        MoCr_MPButtonpanel_ExerciseButton.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_MPButtonpanel_ExerciseButton.setText("√úben");
        MoCr_MPButtonpanel_ExerciseButton.setToolTipText("√úbe diese Verschl√ºsselung an verschiedenen Beispielen");
        MoCr_MPButtonpanel_ExerciseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_MPButtonpanel_ExerciseButtonActionPerformed(evt);
            }
        });

        MoCr_MPButtonpanel_IOChange.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_MPButtonpanel_IOChange.setText("Eingabe wechseln");
        MoCr_MPButtonpanel_IOChange.setToolTipText("Verschiebt den Text im Ausgabefeld in die Eingabe");
        MoCr_MPButtonpanel_IOChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_MPButtonpanel_IOChangeActionPerformed(evt);
            }
        });

        MoCr_MPButtonpanel_Help.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_MPButtonpanel_Help.setText("Hilfe anzeigen");
        MoCr_MPButtonpanel_Help.setToolTipText("Brauchst du Hilfe? Klicke hier");
        MoCr_MPButtonpanel_Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_MPButtonpanel_HelpActionPerformed(evt);
            }
        });

        MoCr_EncryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Angepasstes geschlossenes Schloss.png"))); // NOI18N
        MoCr_EncryptButton.setToolTipText("Verschl√ºsseln");
        MoCr_EncryptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoCr_EncryptButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MoCr_EncryptButtonMouseEntered(evt);
            }
        });

        MoCr_DecryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/graphics/Angepasstes geschlossenes Schloss 2.png"))); // NOI18N
        MoCr_DecryptButton.setToolTipText("Entschl√ºsseln");
        MoCr_DecryptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoCr_DecryptButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MoCr_DecryptButtonMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout MoCr_GenDyn_MainProListLayout = new javax.swing.GroupLayout(MoCr_GenDyn_MainProList);
        MoCr_GenDyn_MainProList.setLayout(MoCr_GenDyn_MainProListLayout);
        MoCr_GenDyn_MainProListLayout.setHorizontalGroup(
            MoCr_GenDyn_MainProListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_GenDyn_MainProListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_EncryptButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(MoCr_DecryptButton)
                .addGap(9, 9, 9))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_GenDyn_MainProListLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(MoCr_GenDyn_MainProListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_MPButtonpanel_Help, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_MPButtonpanel_IOChange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_MPButtonpanel_ExerciseButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_Gen_Sidelist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_MPButtonpanel_LearnButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        MoCr_GenDyn_MainProListLayout.setVerticalGroup(
            MoCr_GenDyn_MainProListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_GenDyn_MainProListLayout.createSequentialGroup()
                .addComponent(MoCr_Gen_Sidelist, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MoCr_GenDyn_MainProListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_EncryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_DecryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MPButtonpanel_LearnButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MPButtonpanel_ExerciseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MPButtonpanel_IOChange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_MPButtonpanel_Help)
                .addContainerGap())
        );

        MoCr_Gen_ListPanel.add(MoCr_GenDyn_MainProList, "card3");

        MoCr_Gen_DidLister.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_Gen_DidLister.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Mathematik", "Steganographie", "Spielsprachen", "Kryptologie", "Kryptoanalyse", "Kryptographie", "Asymmetrisch", "RSA", "End-to-End", "Symmetrisch", "Transpositionen", "Substitution", "Codierungen", "Chiffrierung", "Monoalphabetisch", "Caesar Chiffre", "Multiplikative Chiffre", "Polyalphabetisch", "Vigenere Chiffre", "Enigma", "One-Time-Pad", "Hill Chiffre", "Affine Chiffre" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        MoCr_Gen_DidLister.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        MoCr_Gen_DidLister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MoCr_Gen_DidListerMousePressed(evt);
            }
        });
        MoCr_Gen_DidList.setViewportView(MoCr_Gen_DidLister);

        javax.swing.GroupLayout MoCr_GenDyn_DidListPanelLayout = new javax.swing.GroupLayout(MoCr_GenDyn_DidListPanel);
        MoCr_GenDyn_DidListPanel.setLayout(MoCr_GenDyn_DidListPanelLayout);
        MoCr_GenDyn_DidListPanelLayout.setHorizontalGroup(
            MoCr_GenDyn_DidListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_Gen_DidList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        MoCr_GenDyn_DidListPanelLayout.setVerticalGroup(
            MoCr_GenDyn_DidListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_Gen_DidList, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );

        MoCr_Gen_ListPanel.add(MoCr_GenDyn_DidListPanel, "card3");

        MoCr_Gen_Choicemenu1.setText("Einstellungen");
        MoCr_Gen_Choicemenu1.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_Gen_Choicemenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoCr_Gen_Choicemenu1MouseClicked(evt);
            }
        });
        MoCr_Gen_Choicebar.add(MoCr_Gen_Choicemenu1);

        MoCr_Gen_Choicemenu2.setText("Impressum");
        MoCr_Gen_Choicemenu2.setFont(new java.awt.Font(CFont, 0, 12));
        MoCr_Gen_Choicemenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoCr_Gen_Choicemenu2MouseClicked(evt);
            }
        });
        MoCr_Gen_Choicebar.add(MoCr_Gen_Choicemenu2);

        setJMenuBar(MoCr_Gen_Choicebar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(MoCr_Gen_DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_Gen_ListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_Gen_DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_Gen_ListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MoCr_MPButtonpanel_LearnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_MPButtonpanel_LearnButtonActionPerformed
        // TODO add your handling code here:    
        localSModule.setLearningPanel();
    }//GEN-LAST:event_MoCr_MPButtonpanel_LearnButtonActionPerformed

    private void MoCr_Did_ReturnerbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_Did_ReturnerbuttonActionPerformed
        // TODO add your handling code here:
        localSModule.returnToMain();
    }//GEN-LAST:event_MoCr_Did_ReturnerbuttonActionPerformed

    private void MoCr_Gen_Choicemenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_Gen_Choicemenu2MouseClicked
        // TODO add your handling code here:
        localCredits.setVisible(true);
    }//GEN-LAST:event_MoCr_Gen_Choicemenu2MouseClicked
              
    private void MoCr_MPButtonpanel_IOChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_MPButtonpanel_IOChangeActionPerformed
        // TODO add your handling code here:
        String changetext = MoCr_MPstaticIO_OutField.getText();
        if(changetext.length() > 0) {
            MoCr_MPstaticIO_InField.setText(changetext);
            MoCr_MPstaticIO_OutField.setText("");
        }            
    }//GEN-LAST:event_MoCr_MPButtonpanel_IOChangeActionPerformed

    private void MoCr_OTPSub_GeneratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_OTPSub_GeneratorActionPerformed
        // TODO add your handling code here:
        if(localLogic.getIsUsed() == true) {
            String in = MoCr_MPstaticIO_InField.getText();
            int l = in.length();
            String nk = localTools.generateNormalKey(l);
            MoCr_OTPSub_Area.setText(nk);        
        }
    }//GEN-LAST:event_MoCr_OTPSub_GeneratorActionPerformed

    private void MoCr_MPButtonpanel_HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_MPButtonpanel_HelpActionPerformed
        // TODO add your handling code here:
        localSupport.refreshSupport();
        localSupport.setVisible(true);
    }//GEN-LAST:event_MoCr_MPButtonpanel_HelpActionPerformed

    private void MoCr_CodierungenSub_ADFGXFillerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_ADFGXFillerActionPerformed
        // TODO add your handling code here:
        String seq = localFraTools.ADFGX_SpecialCheck(MoCr_ADFGX_Matrix);
        String out = localFraTools.fillTable(seq);
        localFraTools.writeTable(MoCr_ADFGX_Matrix, out);        
    }//GEN-LAST:event_MoCr_CodierungenSub_ADFGXFillerActionPerformed

    private void MoCr_MPButtonpanel_ExerciseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_MPButtonpanel_ExerciseButtonActionPerformed
        // TODO add your handling code here:
        localExc.refresh(localLogic.getState());
    }//GEN-LAST:event_MoCr_MPButtonpanel_ExerciseButtonActionPerformed

    private void MoCr_Gen_Choicemenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_Gen_Choicemenu1MouseClicked
        // TODO add your handling code here:
        localSettings.myAL.localIModule.renew();
    }//GEN-LAST:event_MoCr_Gen_Choicemenu1MouseClicked

    private void MoCr_Gen_SidelisterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_Gen_SidelisterMousePressed
        // TODO add your handling code here:
        localSModule.switchCipherContent(MoCr_Gen_Sidelister.getSelectedIndex());        
    }//GEN-LAST:event_MoCr_Gen_SidelisterMousePressed

    private void MoCr_Gen_DidListerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_Gen_DidListerMousePressed
        // TODO add your handling code here:
        localSModule.setLearningContent();
    }//GEN-LAST:event_MoCr_Gen_DidListerMousePressed

    private void MoCr_SpielsprachenMP_BiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_SpielsprachenMP_BiButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(5, 1);
    }//GEN-LAST:event_MoCr_SpielsprachenMP_BiButtonActionPerformed

    private void MoCr_SpielsprachenMP_BobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_SpielsprachenMP_BobButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(6, 1);
    }//GEN-LAST:event_MoCr_SpielsprachenMP_BobButtonActionPerformed

    private void MoCr_SpielsprachenMP_LoeffelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_SpielsprachenMP_L√∂ffelButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(7, 1);
    }//GEN-LAST:event_MoCr_SpielsprachenMP_L√∂ffelButtonActionPerformed

    private void MoCr_SteganoSub_BaconButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_SteganoSub_BaconButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(9, 0);
    }//GEN-LAST:event_MoCr_SteganoSub_BaconButtonActionPerformed

    private void MoCr_SteganoSub_PseudoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_SteganoSub_PseudoButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(10, 1);
    }//GEN-LAST:event_MoCr_SteganoSub_PseudoButtonActionPerformed

    private void MoCr_TranspositionSub_SpaltelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_TranspositionSub_SpaltelButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(4, 0);
        localSModule.changeTranspositionKeyPanel(0);
    }//GEN-LAST:event_MoCr_TranspositionSub_SpaltelButtonActionPerformed

    private void MoCr_TranspositionSub_GartenzaunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_TranspositionSub_GartenzaunButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(5, 0);
        localSModule.changeTranspositionKeyPanel(0);
    }//GEN-LAST:event_MoCr_TranspositionSub_GartenzaunButtonActionPerformed

    private void MoCr_TranspositionSub_AnagrammButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_TranspositionSub_AnagrammButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(0, 1);
        localSModule.changeTranspositionKeyPanel(-1);
    }//GEN-LAST:event_MoCr_TranspositionSub_AnagrammButtonActionPerformed

    private void MoCr_TranspositionSub_DoppelwuerfelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_TranspositionSub_Doppelw√ºrfelButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(0, 2);
        localSModule.changeTranspositionKeyPanel(1);
    }//GEN-LAST:event_MoCr_TranspositionSub_Doppelw√ºrfelButtonActionPerformed

    private void MoCr_TranspositionSub_PermutaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_TranspositionSub_PermutaButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(8, 0);
        localSModule.changeTranspositionKeyPanel(2);
    }//GEN-LAST:event_MoCr_TranspositionSub_PermutaButtonActionPerformed

    private void MoCr_CodierungenSub_MorseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_MorseButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(1, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_MorseButtonActionPerformed

    private void MoCr_CodierungenSub_ASCIIButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_ASCIIButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(2, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_ASCIIButtonActionPerformed

    private void MoCr_CodierungenSub_BinaerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_Bin√§rButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(3, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_Bin√§rButtonActionPerformed

    private void MoCr_CodierungenSub_BinToHexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_BinToHexButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(8, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_BinToHexButtonActionPerformed

    private void MoCr_CodierungenSub_AlphaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_AlphaButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(4, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_AlphaButtonActionPerformed

    private void MoCr_CodierungenSub_NATOButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_NATOButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(9, 1);
    }//GEN-LAST:event_MoCr_CodierungenSub_NATOButtonActionPerformed

    private void MoCr_CodierungenSub_ADFGXButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_CodierungenSub_ADFGXButtonActionPerformed
        // TODO add your handling code here:
        localLogic.setIdentificationPair(6, 0);
    }//GEN-LAST:event_MoCr_CodierungenSub_ADFGXButtonActionPerformed

    private void MoCr_HillSub_SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MoCr_HillSub_SliderStateChanged
        // TODO add your handling code here:
        int t = MoCr_HillSub_Slider.getValue();
        localFraTools.alterJTable(MoCr_HillSub_Matrix, t);
        MoCr_HillSub_Size.setText(Integer.toString(t));
    }//GEN-LAST:event_MoCr_HillSub_SliderStateChanged

    private void MoCr_PermSub_SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MoCr_PermSub_SliderStateChanged
        // TODO add your handling code here:
        int t = MoCr_PermSub_Slider.getValue();
        localFraTools.alterJTable(MoCr_TranspositionSub_MatrixKeyField, t);
        MoCr_PermSub_ValueLabel.setText(Integer.toString(t));
    }//GEN-LAST:event_MoCr_PermSub_SliderStateChanged

    private void MoCr_MultiplikaitvSub_KeyGenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_MultiplikaitvSub_KeyGenButtonActionPerformed
        // TODO add your handling code here:
        String k = localTools.generateCoprimeKey(1);
        MoCr_MultiplikativSub_KeyField.setText(k);
    }//GEN-LAST:event_MoCr_MultiplikaitvSub_KeyGenButtonActionPerformed

    private void MoCr_EncryptButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_EncryptButtonMouseClicked
        // TODO add your handling code here:
        localCModule.encrypt(true);
    }//GEN-LAST:event_MoCr_EncryptButtonMouseClicked

    private void MoCr_DecryptButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_DecryptButtonMouseClicked
        // TODO add your handling code here:
        localCModule.encrypt(false);
    }//GEN-LAST:event_MoCr_DecryptButtonMouseClicked

    private void MoCr_MPstaticIO_InFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoCr_MPstaticIO_InFieldFocusGained
        // TODO add your handling code here:
        if(localLogic.getIsUsed() == false) {
            if(MoCr_MPstaticIO_InField.getText().equals(Translator.getInstance().getString("input")) == true) {
                MoCr_MPstaticIO_InField.setText("");
            }
        }
    }//GEN-LAST:event_MoCr_MPstaticIO_InFieldFocusGained

    private void MoCr_MPstaticIO_InFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoCr_MPstaticIO_InFieldFocusLost
        // TODO add your handling code here:
        if(MoCr_MPstaticIO_InField.getText().equals("") == true) {
            MoCr_MPstaticIO_InField.setText(Translator.getInstance().getString("input"));
            localLogic.setIsUsed(false);
        } else {localLogic.setIsUsed(true);}
    }//GEN-LAST:event_MoCr_MPstaticIO_InFieldFocusLost

    private void MoCr_MPstaticIO_OutFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoCr_MPstaticIO_OutFieldFocusGained
        // TODO add your handling code here:
        if(MoCr_MPstaticIO_OutField.getText().equals(Translator.getInstance().getString("output")) == true) {
            MoCr_MPstaticIO_OutField.setText("");
        }
    }//GEN-LAST:event_MoCr_MPstaticIO_OutFieldFocusGained

    private void MoCr_MPstaticIO_OutFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MoCr_MPstaticIO_OutFieldFocusLost
        // TODO add your handling code here:
        if(MoCr_MPstaticIO_OutField.getText().equals("") == true) {
            MoCr_MPstaticIO_OutField.setText(Translator.getInstance().getString("output"));
        }
    }//GEN-LAST:event_MoCr_MPstaticIO_OutFieldFocusLost

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        localGModule.switchCounterclockwise();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        localGModule.switchClockwise();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void MoCr_EncryptButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_EncryptButtonMouseEntered
        // TODO add your handling code here:
        getContentPane().requestFocusInWindow();
    }//GEN-LAST:event_MoCr_EncryptButtonMouseEntered

    private void MoCr_DecryptButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoCr_DecryptButtonMouseEntered
        // TODO add your handling code here:
        getContentPane().requestFocusInWindow();
    }//GEN-LAST:event_MoCr_DecryptButtonMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(localLogic.getIsUsed() == true) {
            MoCr_MPstaticIO_OutField.setText(localCModule.analysieren(MoCr_MPstaticIO_InField.getText(), 0));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoCr_Frame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable MoCr_ADFGX_Matrix;
    private javax.swing.JScrollPane MoCr_ADFGX_Scroller;
    private javax.swing.JLabel MoCr_AffChiffSub_FuncPre;
    public javax.swing.JLabel MoCr_AffChiffSub_Function;
    public javax.swing.JLabel MoCr_AffChiffSub_Functionpointer;
    public javax.swing.JTextField MoCr_AffChiffSub_Key1;
    public javax.swing.JTextField MoCr_AffChiffSub_Key2;
    public javax.swing.JLabel MoCr_AffChiffSub_KeyLabel;
    private javax.swing.JLabel MoCr_AffChiffSub_mLabel;
    private javax.swing.JLabel MoCr_AffChiffSub_tLabel;
    private javax.swing.JLabel MoCr_AffiChiffSub_Heading;
    private javax.swing.JLabel MoCr_AffiChiffSub_Heading1;
    public javax.swing.JLabel MoCr_CaesarSub_DiscBack;
    private javax.swing.JLabel MoCr_CaesarSub_Heading;
    public javax.swing.JLabel MoCr_CaesarSub_LabelSchluessel;
    public javax.swing.JTextField MoCr_Caesar_EingabefeldSchluessel;
    private javax.swing.ButtonGroup MoCr_CodierungenMp_Grouper;
    public javax.swing.JRadioButton MoCr_CodierungenSub_ADFGXButton;
    public javax.swing.JButton MoCr_CodierungenSub_ADFGXFiller;
    public javax.swing.JRadioButton MoCr_CodierungenSub_ASCIIButton;
    public javax.swing.JRadioButton MoCr_CodierungenSub_AlphaButton;
    public javax.swing.JRadioButton MoCr_CodierungenSub_BinToHexButton;
    public javax.swing.JRadioButton MoCr_CodierungenSub_BinaerButton;
    private javax.swing.JLabel MoCr_CodierungenSub_Heading;
    public javax.swing.JRadioButton MoCr_CodierungenSub_MorseButton;
    public javax.swing.JRadioButton MoCr_CodierungenSub_NATOButton;
    public javax.swing.JLabel MoCr_DecryptButton;
    public javax.swing.JEditorPane MoCr_Did_HTMLView;
    public javax.swing.JButton MoCr_Did_Returnerbutton;
    private javax.swing.JScrollPane MoCr_Did_Scrollpanel;
    public javax.swing.JPanel MoCr_Did_cardPanel;
    public javax.swing.JLabel MoCr_EncryptButton;
    public javax.swing.JPanel MoCr_GenDyn_DidListPanel;
    public javax.swing.JPanel MoCr_GenDyn_MainProList;
    private javax.swing.JMenuBar MoCr_Gen_Choicebar;
    public javax.swing.JMenu MoCr_Gen_Choicemenu1;
    public javax.swing.JMenu MoCr_Gen_Choicemenu2;
    private javax.swing.JScrollPane MoCr_Gen_DidList;
    public javax.swing.JList<String> MoCr_Gen_DidLister;
    public javax.swing.JPanel MoCr_Gen_DynamicPanel;
    public javax.swing.JPanel MoCr_Gen_ListPanel;
    private javax.swing.JScrollPane MoCr_Gen_Sidelist;
    public javax.swing.JList<String> MoCr_Gen_Sidelister;
    private javax.swing.JLabel MoCr_HillSub_Heading;
    public javax.swing.JTable MoCr_HillSub_Matrix;
    private javax.swing.JLabel MoCr_HillSub_MaxLab;
    private javax.swing.JLabel MoCr_HillSub_MinLab;
    private javax.swing.JLabel MoCr_HillSub_Size;
    public javax.swing.JLabel MoCr_HillSub_SizeLab;
    private javax.swing.JSlider MoCr_HillSub_Slider;
    public javax.swing.JButton MoCr_MPButtonpanel_ExerciseButton;
    public javax.swing.JButton MoCr_MPButtonpanel_Help;
    public javax.swing.JButton MoCr_MPButtonpanel_IOChange;
    public javax.swing.JButton MoCr_MPButtonpanel_LearnButton;
    public javax.swing.JPanel MoCr_MPSub_AffineChiffre;
    public javax.swing.JPanel MoCr_MPSub_Caesar;
    public javax.swing.JPanel MoCr_MPSub_Codierungen;
    public javax.swing.JPanel MoCr_MPSub_Hill;
    public javax.swing.JPanel MoCr_MPSub_Kryptoanalyse;
    public javax.swing.JPanel MoCr_MPSub_Multiplikativ;
    public javax.swing.JPanel MoCr_MPSub_OTP;
    private javax.swing.JLabel MoCr_MPSub_OTP_Testlabel;
    public javax.swing.JPanel MoCr_MPSub_Spielsprachen;
    public javax.swing.JPanel MoCr_MPSub_Steganographie;
    public javax.swing.JPanel MoCr_MPSub_Transposition;
    public javax.swing.JPanel MoCr_MPSub_Vigenere;
    private javax.swing.JLabel MoCr_MPstaticIO_Heading;
    public javax.swing.JTextArea MoCr_MPstaticIO_InField;
    public javax.swing.JTextArea MoCr_MPstaticIO_OutField;
    private javax.swing.JScrollPane MoCr_MPstaticIO_ScrollerIn;
    private javax.swing.JScrollPane MoCr_MPstaticIO_ScrollerOut;
    public javax.swing.JPanel MoCr_MainPro_cardPanel;
    public javax.swing.JPanel MoCr_MainPro_changeable;
    private javax.swing.JPanel MoCr_MainPro_static_IOpanel;
    public javax.swing.JButton MoCr_MultiplikaitvSub_KeyGenButton;
    public javax.swing.JLabel MoCr_MultiplikaitvSub_KeyPointer;
    private javax.swing.JLabel MoCr_MultiplikativSub_Bild;
    private javax.swing.JLabel MoCr_MultiplikativSub_Heading;
    public javax.swing.JTextField MoCr_MultiplikativSub_KeyField;
    public javax.swing.JTextArea MoCr_OTPSub_Area;
    public javax.swing.JButton MoCr_OTPSub_Generator;
    public javax.swing.JLabel MoCr_OTPSub_LabelSchluessel;
    public javax.swing.JLabel MoCr_PermSub_Label;
    private javax.swing.JLabel MoCr_PermSub_MaxVal;
    private javax.swing.JLabel MoCr_PermSub_MinVal;
    private javax.swing.JSlider MoCr_PermSub_Slider;
    private javax.swing.JLabel MoCr_PermSub_ValueLabel;
    public javax.swing.JRadioButton MoCr_SpielsprachenMP_BiButton;
    public javax.swing.JRadioButton MoCr_SpielsprachenMP_BobButton;
    private javax.swing.ButtonGroup MoCr_SpielsprachenMP_Grouper;
    public javax.swing.JRadioButton MoCr_SpielsprachenMP_LoeffelButton;
    private javax.swing.JLabel MoCr_SpielsprachenSub_Heading;
    private javax.swing.ButtonGroup MoCr_SteganoMP_Grouper;
    public javax.swing.JRadioButton MoCr_SteganoSub_BaconButton;
    public javax.swing.JTextArea MoCr_SteganoSub_BaconKey;
    public javax.swing.JLabel MoCr_SteganoSub_BaconKeyHeading;
    private javax.swing.JLabel MoCr_SteganoSub_Heading;
    public javax.swing.JRadioButton MoCr_SteganoSub_PseudoButton;
    public javax.swing.JTextField MoCr_TranspositionKey_1KeyField;
    public javax.swing.JLabel MoCr_TranspositionKey_1KeyLabel;
    private javax.swing.ButtonGroup MoCr_TranspositionMP_Grouper;
    public javax.swing.JPanel MoCr_TranspositionSub_1Key;
    public javax.swing.JPanel MoCr_TranspositionSub_2Key;
    public javax.swing.JTextField MoCr_TranspositionSub_2KeyField1;
    public javax.swing.JTextField MoCr_TranspositionSub_2KeyField2;
    public javax.swing.JLabel MoCr_TranspositionSub_2KeyLabel;
    public javax.swing.JRadioButton MoCr_TranspositionSub_AnagrammButton;
    public javax.swing.JRadioButton MoCr_TranspositionSub_DoppelwuerfelButton;
    public javax.swing.JRadioButton MoCr_TranspositionSub_GartenzaunButton;
    private javax.swing.JLabel MoCr_TranspositionSub_Heading;
    public javax.swing.JPanel MoCr_TranspositionSub_KeyPanel;
    public javax.swing.JPanel MoCr_TranspositionSub_MatrixKey;
    public javax.swing.JTable MoCr_TranspositionSub_MatrixKeyField;
    public javax.swing.JLabel MoCr_TranspositionSub_MatrixKeyLabel;
    public javax.swing.JPanel MoCr_TranspositionSub_NoKey;
    public javax.swing.JRadioButton MoCr_TranspositionSub_PermutaButton;
    public javax.swing.JRadioButton MoCr_TranspositionSub_SpaltelButton;
    public javax.swing.JTextField MoCr_VigenereSub_EingabefeldSchluessel;
    private javax.swing.JLabel MoCr_VigenereSub_Heading;
    private javax.swing.JLabel MoCr_VigenereSub_Image;
    public javax.swing.JLabel MoCr_VigenereSub_LabelSchluessel;
    public javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
